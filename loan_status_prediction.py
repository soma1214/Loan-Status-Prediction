# -*- coding: utf-8 -*-
"""loan_status_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1INJms87fIAdLyltruH3BY8Fpu_h-Hngv
"""

import pandas as pd
import numpy as np

##Data Reading
df=pd.read_csv("loan status.csv")

df.head()

df.info()

df.isnull().sum()

df=df.dropna()

df.isnull().sum()

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()

df['Gender']=le.fit_transform(df['Gender'])
df['Married']=le.fit_transform(df['Married'])
df['Education']=le.fit_transform(df['Education'])
df['Self_Employed']=le.fit_transform(df['Self_Employed'])
df['Property_Area']=le.fit_transform(df['Property_Area'])
df['Loan_Status']=le.fit_transform(df['Loan_Status'])

df.head()

df['Dependents'].value_counts()

df=df.replace(to_replace='3+',value=4)

df.head()

df['Dependents'].value_counts()

##Independent features
X=df.drop(columns=["Loan_ID","Loan_Status"])
##dependent features
y=df['Loan_Status']

X

y

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.1,random_state=0)

X_train.shape

X_test.shape

y_train.shape

y_test.shape

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC

logistic=LogisticRegression()

classifier=SVC(kernel='linear')

logistic.fit(X_train,y_train)

y_pred1=logistic.predict(X_test)

from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
logistic_accuracy_score=accuracy_score(y_pred1,y_test)
logistic_confusion_matrix=confusion_matrix(y_pred1,y_test)
logistic_classification_report=classification_report(y_pred1,y_test)

print("Logistic Regression Metrics: ")
print("Logistic Accuracy Score: ",logistic_accuracy_score)
print("Logistic Regression Confusion Matrix: ",logistic_confusion_matrix)
print("Logistic Regression Classification Report: ",logistic_classification_report)

